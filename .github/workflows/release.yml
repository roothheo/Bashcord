name: Release
on:
    push:
        branches:
            - main

env:
    FORCE_COLOR: true
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    REPO: roothheo/Bashcord
    USERNAME: GitHub-Actions

permissions:
    contents: write

jobs:
    Build:
        name: Build Bashcord
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v3

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build web
              run: pnpm buildWebStandalone

            - name: Build
              run: pnpm buildStandalone

            - name: Generate plugin lists
              run: |
                  pnpm generatePluginJson dist/plugins.json
                  pnpm generateEquicordPluginJson dist/equicordplugins.json
                  pnpm generateVencordPluginJson dist/vencordplugins.json
                  pnpm generateDevsList dist/devs.json

            - name: Collect files to be released
              run: |
                  cd dist
                  mkdir -p release

                  # Copy browser files
                  cp browser/browser.* release 2>/dev/null || true
                  cp Vencord.user.{js,js.LEGAL.txt} release 2>/dev/null || true

                  # Copy plugin data jsons, extension zips and desktop/vesktop asars
                  cp *.json release 2>/dev/null || true
                  cp *.zip release 2>/dev/null || true
                  cp *.asar release 2>/dev/null || true

                  # Copy desktop files if they exist
                  if [ -d "desktop" ]; then
                      cp desktop/* release 2>/dev/null || true
                  fi

                  # Copy bashcord files if they exist
                  if [ -d "bashcord" ]; then
                      for file in bashcord/*; do
                          if [ -f "$file" ]; then
                              filename=$(basename "$file")
                              cp "$file" "release/bashcord${filename^}"
                          fi
                      done
                  fi

                  # Clean up empty files and unwanted files
                  find release -size 0 -delete 2>/dev/null || true
                  rm -f release/package.json 2>/dev/null || true
                  rm -f release/*.map 2>/dev/null || true

            - name: Upload Bashcord Stable
              run: |
                  gh release upload latest --clobber dist/release/*

            - name: Upload Plugin JSONs to Bashcord repo
              run: |
                  git config --global user.name "GitHub-Actions"
                  git config --global user.email actions@github.com
                  git clone https://$USERNAME:$GITHUB_TOKEN@github.com/$REPO.git plugins
                  cd plugins

                  cp ../dist/release/*plugins.json .
                  git add -A

                  git commit -m "Plugins for https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
                  git push --force https://$USERNAME:$GITHUB_TOKEN@github.com/$REPO.git